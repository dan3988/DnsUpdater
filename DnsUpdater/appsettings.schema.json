{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"definitions": {
		"httpMethod": {
			"description": "HTTP Methods.",
			"type": "string",
			"enum": [
				"GET",
				"PUT",
				"POST",
				"DELETE",
				"HEAD",
				"OPTIONS",
				"TRACE",
				"PATCH",
				"CONNECT"
			]
		},
		"logLevelThreshold": {
			"description": "Log level threshold.",
			"type": "string",
			"enum": [
				"Trace",
				"Debug",
				"Information",
				"Warning",
				"Error",
				"Critical",
				"None"
			]
		},
		"logLevel": {
			"title": "logging level options",
			"description": "Log level configurations used when creating logs. Only logs that exceeds its matching log level will be enabled. Each log level configuration has a category specified by its JSON property name. For more information about configuring log levels, see https://docs.microsoft.com/aspnet/core/fundamentals/logging/#configure-logging.",
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/logLevelThreshold"
			}
		},
		"logging": {
			"title": "logging options",
			"type": "object",
			"description": "Configuration for Microsoft.Extensions.Logging.",
			"properties": {
				"LogLevel": {
					"$ref": "#/definitions/logLevel"
				},
				"Console": {
					"properties": {
						"LogLevel": {
							"$ref": "#/definitions/logLevel"
						},
						"FormatterName": {
							"description": "Name of the log message formatter to use. Defaults to 'simple'.",
							"type": "string",
							"default": "simple"
						},
						"FormatterOptions": {
							"title": "formatter options",
							"description": "Log message formatter options. Additional properties are available on the options depending on the configured formatter. The formatter is specified by FormatterName.",
							"type": "object",
							"properties": {
								"IncludeScopes": {
									"description": "Include scopes when true. Defaults to false.",
									"type": "boolean",
									"default": false
								},
								"TimestampFormat": {
									"description": "Format string used to format timestamp in logging messages. Defaults to null.",
									"type": "string"
								},
								"UseUtcTimestamp": {
									"description": "Indication whether or not UTC timezone should be used to for timestamps in logging messages. Defaults to false.",
									"type": "boolean",
									"default": false
								}
							}
						},
						"LogToStandardErrorThreshold": {
							"description": "The minimum level of messages are written to Console.Error.",
							"$ref": "#/definitions/logLevelThreshold"
						}
					}
				},
				"EventSource": {
					"properties": {
						"LogLevel": {
							"$ref": "#/definitions/logLevel"
						}
					}
				},
				"EventLog": {
					"properties": {
						"LogLevel": {
							"$ref": "#/definitions/logLevel"
						}
					}
				},
				"Serilog": {
					"properties": {
						"PathFormat": {
							"description": "",
							"type": "string"
						}
					}
				}
			},
			"additionalProperties": {
				"title": "provider logging settings",
				"type": "object",
				"description": "Logging configuration for a provider. The provider name must match the configuration's JSON property property name.",
				"properties": {
					"LogLevel": {
						"$ref": "#/definitions/logLevel"
					}
				}
			}
		},
		"template": {
			"type": "string",
			"pattern": "^(?:[^\\\\`$]|\\\\[\\s\\S]|(?:\\$\\{[^}]*\\}))*$"
		},
		"action": {
			"type": "object",
			"properties": {
				"Location": {
					"description": "The template for the URL to send the request to.",
					"allOf": [
						{
							"$ref": "#/definitions/template"
						}
					]
				},
				"Method": {
					"description": "The HTTP method of the request.",
					"allOf": [
						{
							"$ref": "#/definitions/httpMethod"
						}
					]
				},
				"Headers": {
					"description": "The headers to add the request.",
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/template"
					}
				},
				"Body": {
					"description": "The template for the body of the request.",
					"allOf": [
						{
							"$ref": "#/definitions/template"
						}
					]
				}
			},
			"required": [
				"Location"
			]
		},
		"config": {
			"properties": {
				"IpProvider": {
					"description": "A url that is used to determine the current IP of the machine running the service. The response needs to be plain text and a valid IPv4 or IPv6 string.",
					"pattern": "https?://",
					"type": "string"
				},
				"ChangeDelay": {
					"description": "The number of milliseconds to wait after a network configuration change is detected before invoking the actions, to prevent them from being invoked multiple times unnecessarily.",
					"type": "integer"
				},
				"Ignore": {
					"description": "A list of IP addresses or host names to ignore if your machine is connected to a VPN.",
					"type": "array",
					"items": {
						"type": "string",
						"pattern": "^(([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])(:\\d{1,5})?$"
					}
				},
				"HistoryFile": {
					"description": "A path to a file that the service will log the date and IP to when a change is detected.",
					"type": "string"
				},
				"Actions": {
					"description": "A list of HTTP requests to send when a change is detected.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/action"
					}
				}
			},
			"required": [
				"IpProvider",
				"Actions"
			]
		}
	},
	"properties": {
		"Logging": {
			"$ref": "#/definitions/logging"
		},
		"Config": {
			"$ref": "#/definitions/config"
		}
	}
}
